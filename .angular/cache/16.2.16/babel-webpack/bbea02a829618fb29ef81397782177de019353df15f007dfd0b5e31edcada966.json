{"ast":null,"code":"import { isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { ProjectsComponent } from './pages/projects/projects.component';\n// import { NavbarComponent } from './pages/navbar/navbar.component';\n// import { FooterComponent } from './pages/footer/footer.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { SharedModule } from './shared/shared.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [BrowserModule, AppRoutingModule, SharedModule, ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: !isDevMode(),\n        // Register the ServiceWorker as soon as the application is stable\n        // or after 30 seconds (whichever comes first).\n        registrationStrategy: 'registerWhenStable:30000'\n      })]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, AboutComponent, ProjectsComponent,\n    // NavbarComponent,\n    // FooterComponent,\n    NotfoundComponent],\n    imports: [BrowserModule, AppRoutingModule, SharedModule, i1.ServiceWorkerModule]\n  });\n})();","map":{"version":3,"names":["isDevMode","BrowserModule","AppRoutingModule","AppComponent","AboutComponent","ProjectsComponent","NotfoundComponent","SharedModule","ServiceWorkerModule","AppModule","bootstrap","register","enabled","registrationStrategy","declarations","imports","i1"],"sources":["C:\\Users\\Suvojit\\OneDrive\\Desktop\\github portfolio\\myPortfolio\\angular-portfolio\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule, isDevMode } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AboutComponent } from './pages/about/about.component';\r\nimport { ProjectsComponent } from './pages/projects/projects.component';\r\n// import { NavbarComponent } from './pages/navbar/navbar.component';\r\n// import { FooterComponent } from './pages/footer/footer.component';\r\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AboutComponent,\r\n    ProjectsComponent,\r\n    // NavbarComponent,\r\n    // FooterComponent,\r\n    NotfoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: !isDevMode(),\r\n      // Register the ServiceWorker as soon as the application is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerWhenStable:30000'\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n"],"mappings":"AAAA,SAAmBA,SAAS,QAAQ,eAAe;AACnD,SAASC,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE;AACA;AACA,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,mBAAmB,QAAQ,yBAAyB;;;AA0B7D,OAAM,MAAOC,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRP,YAAY;IAAA;EAAA;;;gBAXtBF,aAAa,EACbC,gBAAgB,EAChBK,YAAY,EACZC,mBAAmB,CAACG,QAAQ,CAAC,gBAAgB,EAAE;QAC7CC,OAAO,EAAE,CAACZ,SAAS,EAAE;QACrB;QACA;QACAa,oBAAoB,EAAE;OACvB,CAAC;IAAA;EAAA;;;2EAKOJ,SAAS;IAAAK,YAAA,GArBlBX,YAAY,EACZC,cAAc,EACdC,iBAAiB;IACjB;IACA;IACAC,iBAAiB;IAAAS,OAAA,GAGjBd,aAAa,EACbC,gBAAgB,EAChBK,YAAY,EAAAS,EAAA,CAAAR,mBAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}